<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="memberLogin">
		SELECT
						USER_NO
					, USER_ID
					, USER_PWD
					, USER_NAME
					, PHONE
					, EMAIL
					, ADDRESS
					, ENROLL_DATE
					, USER_TYPE
					, USER_SSN
					, CALLBACK_YN
					, RESIGN_YN
					, USER_DATE
					, USER_GENDER
					, REPRESENTATIVE
					, DOCTOR_NO
					, DEPT_NAME	
			FROM
			  		MEMBER
		LEFT	JOIN DOCTOR USING(USER_NO)
		 WHERE
				   USER_ID = ?
		   AND USER_PWD = ?
		 	 AND USER_TYPE IN ('U','A','D')
		   AND RESIGN_YN = 'N'
	</entry>
	
	<entry key="updateMember">
		UPDATE
		       MEMBER
		   SET
		       USER_NAME = ?
		     , USER_DATE = ?
		     , USER_GENDER = ?
		     , PHONE = ?
		     , EMAIL = ?
		 WHERE 
		       USER_ID = ?		
	</entry>

<entry key="adminDoctorSelect">

SELECT 
			USER_TYPE
FROM 
		 MEMBER
WHERE 
			USER_ID = ?		

</entry>


	<entry key="selectMemberById">
		SELECT
		       USER_NO
		     , USER_ID
		     , USER_PWD
		     , USER_NAME
		     , PHONE
		     , EMAIL
		     , ADDRESS
		     , ENROLL_DATE
		     , USER_TYPE
		     , USER_SSN
		     , CALLBACK_YN     
		     , RESIGN_YN
		     , USER_DATE     
		     , USER_GENDER
		     , REPRESENTATIVE
		  FROM 
		       MEMBER
		 WHERE 
		       USER_ID = ?
	</entry>


	<entry key="updateMemberPwd">
		UPDATE
		       MEMBER
		   SET 
		       USER_PWD = ?
		 WHERE 
		       USER_ID = ?
		   AND USER_PWD = ?		
	</entry>
	
	<entry key="deleteMember">
		UPDATE
		       MEMBER
		   SET
		       RESIGN_YN = 'Y'
		 WHERE 
		       USER_ID = ?
		   AND USER_PWD = ?		
	</entry>
	
	<entry key="signUpAdultMember">
		 INSERT
		 	 INTO MEMBER
		 	 (
		 	   USER_NO
		 	 , USER_ID
		 	 , USER_PWD
		 	 , USER_NAME
		 	 , PHONE
		 	 , EMAIL
		 	 , ADDRESS
		 	 , ENROLL_DATE
		 	 , USER_TYPE
		 	 , USER_SSN
		 	 , CALLBACK_YN
		 	 , RESIGN_YN
		 	 , USER_DATE
		 	 , USER_GENDER
		 	 , REPRESENTATIVE
		 	 )
		 	 VALUES
		 	 (
		 	 	 TO_CHAR(SYSDATE, 'YYMMDD') || LPAD(SEQ_UNO.NEXTVAL, 3, '0')
		 	 , ?
		 	 , ?
		 	 , ?
			 , ?
			 , ?
			 , ?
			 , SYSDATE
			 , 'U'
			 , ?
			 , ?
			 , 'N'
			 , ?
			 , ?
			 , NULL
			 )
	</entry>


  <!-- (상우) 회원 이름으로 회원 검색 -->
	<entry key="selectByName">
		SELECT 
						USER_ID
					, USER_NAME
					, USER_SSN
					, ADDRESS
					, EMAIL
					, CALLBACK_YN
					, PHONE
					, ENROLL_DATE
		FROM 
					MEMBER
		WHERE 
					USER_NAME = ?
	</entry>
	
	
	<!-- (상우) 회원 아이디로 회원 검색 -->
	<entry key="selectById">
		SELECT 
						USER_ID
					, USER_NAME
					, USER_SSN
					, ADDRESS
					, EMAIL
					, CALLBACK_YN
					, PHONE
					, ENROLL_DATE
		FROM 
					MEMBER
		WHERE 
					USER_ID = ?
	</entry>
	
	
	<!-- (상우) 이름, 핸드폰번호, 주민등록번호로 userNo 찾기 (1/2) 진료예약 추가 -->
	<entry key="findUserNo">
	
		SELECT 
						USER_NO
		  FROM 
		  			MEMBER
		 WHERE
		 				USER_NAME = ?
		 	 AND  PHONE = ?
		 	 AND  USER_SSN = ?			 			
	
	</entry>
	
	
	<entry key="idCheck">
		SELECT
					 COUNT(*) as COUNT
			FROM 
					 MEMBER
		 WHERE 
		 			 USER_ID = ?
	</entry>
	
	<entry key="hpCheck">
		SELECT
					 COUNT(*) as COUNT
			FROM 
					 MEMBER
		 WHERE 
		 			 PHONE = ?
	</entry>
	
	<entry key="userSSNCheck">
		SELECT
					 COUNT(*) as COUNT
			FROM 
					 MEMBER
		 WHERE 
		 			 USER_SSN = ?
	</entry>
	
	
	<!-- (상우) 회원번호, 이름으로 userNo 찾기 (1/3) 일반건강검진 예약 추가 -->
	<entry key="findUserNo2">
		SELECT 
						USER_NO
		  FROM 
		  			MEMBER
		 WHERE
		 				USER_ID = ?
		 	 AND  USER_NAME = ?	 			
	</entry>
	
	<!-- (상우) 이름, 주민등록번호로 userNo 찾기 (2/4) 기업건강검진 예약 추가 -->
	<entry key="findUserNo3">
		SELECT 
						USER_NO
		  FROM 
		  			MEMBER
		 WHERE
		 				USER_NAME = ?	 	
		 	 AND  USER_SSN = ?		
	</entry>
	
	
	
</properties>