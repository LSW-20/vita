<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- 첫방문 예약신청 멤버 정보 비교 -->
	<entry key="ComparisonMember">

		SELECT
		USER_ID
		, USER_TYPE
		, PHONE
		, USER_NAME
		, USER_SSN

		FROM
		MEMBER
		WHERE
		PHONE = ?
		AND USER_NAME = ?
		AND USER_SSN = ?
		AND USER_TYPE IN ('U')


	</entry>

	<!-- 진료예약 주민번호 뒷자리로 멤버 비교 -->
	<entry key="SSNBackNum">
		SELECT
		USER_ID
		FROM
		MEMBER
		WHERE
		SUBSTR(USER_SSN,8,13) = ?
	</entry>

	<!-- 진료 예약 내역에 추가 -->
	<entry key="InsertCareApp">

		INSERT
		INTO CARE_APP
		(
			APPOINTMENT_NO
		, USER_NO
		, DOCTOR_NO
		, APPOINTMENT_DATE
		, APPOINTMENT_TIME
		, CARE_STATUS

		)


		VALUES
		(
		'cu'||SEQ_CAN.NEXTVAL
		, ?
		, (SELECT DOCTOR_NO
		FROM DOCTOR
		WHERE DOCTOR_NAME = ?)
		, SYSDATE
		, ?
		, 'N'

		)


	</entry>

	<entry key="SelectHealthCheck">

		SELECT
		USER_NO
		, APPOINTMENT_DATE
		FROM
		CARE_APP
		WHERE
		USER_NO = ?
		AND TRUNC(APPOINTMENT_DATE) = TRUNC(SYSDATE)


	</entry>

	<!--예약조회_보겸 -->
	<entry key="selectCareAndCheckupAppList">
    (
        SELECT
            APPOINTMENT_NO,
            APPOINTMENT_DATE,
            APPOINTMENT_TIME,
            USER_NAME,
            DOCTOR_NAME,
            DEPT_NAME,
            NULL AS COMPANY_NO,  -- CARE_APP에는 COMPANY_NO가 없으므로 NULL
            NULL AS COMP_NAME,  -- CARE_APP에는 COMP_NAME도 없으므로 NULL
            'CARE' AS SOURCE_TYPE
        FROM CARE_APP C
        JOIN DOCTOR D ON C.DOCTOR_NO = D.DOCTOR_NO
        JOIN MEMBER M ON C.USER_NO = M.USER_NO
        WHERE C.USER_NO = ?
        AND CARE_STATUS = 'N'
    )
    UNION
    (
        SELECT
            APPOINTMENT_NO,
            APPOINTMENT_DATE,
            APPOINTMENT_TIME,
            USER_NAME,
            NULL AS DOCTOR_NAME,  -- CHECKUP_APP에는 DOCTOR_NAME이 없으므로 NULL
            NULL AS DEPT_NAME,  -- CHECKUP_APP에는 DEPT_NAME이 없으므로 NULL
            COMPANY_NO,  -- CHECKUP_APP에서만 사용
            COMP_NAME,  -- CHECKUP_APP에서만 사용
            'CHECKUP' AS SOURCE_TYPE
        FROM CHECKUP_APP A
        JOIN MEMBER M ON A.USER_NO = M.USER_NO
        JOIN COMPANY C ON A.COMPANY_NO = C.COMP_NO
        WHERE A.USER_NO = ?
    )
	</entry>

	<!--예약 취소_보겸 -->
	<entry key="deleteCareApp">
		DELETE
		FROM CARE_APP
		WHERE APPOINTMENT_NO = ?
	</entry>

	
	<!-- 당일 예약 내역 오전, 오후 한번씩만 가능하도록 진료 예약내역 조회 -->
	<entry key="SelectConsultation">

		SELECT
		USER_NO
		, APPOINTMENT_DATE
		, APPOINTMENT_TIME
		FROM
		CARE_APP
		WHERE
		USER_NO = ?
		AND TRUNC(APPOINTMENT_DATE) = TRUNC(SYSDATE)
		AND APPOINTMENT_TIME = ?
	</entry>

	<!-- 진료 예약 완료페이지 동적으로 처리하도록 진료예약정보 조회 -->
	<entry key="selectSuccess">

		SELECT
		D.DEPT_NAME,
		M.USER_NO,
		D.DOCTOR_NAME,
		C.APPOINTMENT_TIME,
		C.APPOINTMENT_DATE
		FROM CARE_APP C
		JOIN DOCTOR D ON C.DOCTOR_NO = D.DOCTOR_NO
		JOIN MEMBER M ON C.USER_NO = M.USER_NO
		WHERE C.USER_NO = ?
		AND C.APPOINTMENT_TIME = ?
		AND TRUNC(C.APPOINTMENT_DATE) = TRUNC(SYSDATE)


	</entry>

	<!-- 일반검진회원 입력정보 비교 -->
	<entry key="NormalMember">


		SELECT
			USER_ID
		, USER_NAME
		, USER_SSN
		, PHONE
		, EMAIL
		FROM
		MEMBER
		WHERE
		USER_NAME = ?
		AND USER_SSN = ?
		AND PHONE = ?

	</entry>
	

	<!-- (상우) 진료예약 조회 -->
	<entry key="selectCareApp">
	
		SELECT 
						APPOINTMENT_NO
					, DEPT_NAME
					, DOCTOR_NAME
					, TO_CHAR(APPOINTMENT_DATE, 'YYYY-MM-DD') AS APPOINTMENT_DATE
					, APPOINTMENT_TIME
					, C.USER_NO AS USER_NO
					, USER_NAME
					, PHONE
					, CARE_STATUS
		  FROM
		 				CARE_APP C 
		 	JOIN  MEMBER M ON C.USER_NO = M.USER_NO
      JOIN  DOCTOR D ON C.DOCTOR_NO = D.DOCTOR_NO
     WHERE  DEPT_NAME = ?
       AND  DOCTOR_NAME = ?
		  	AND TRUNC(APPOINTMENT_DATE) BETWEEN ? AND ?							
		
	</entry>


	<!-- (상우) 진료예약 추가(2/2) -->
	<entry key="insertCareApp">
	
		INSERT 
		  INTO
		  			CARE_APP
		  (
		  	APPOINTMENT_NO
		  , USER_NO
		  , DOCTOR_NO
		  , APPOINTMENT_DATE
		  , APPOINTMENT_TIME
		  , CARE_STATUS
		  )		
		  VALUES
		  (
		  	'cu' || SEQ_CAN.NEXTVAL
		  , ?
		  , (SELECT DOCTOR_NO FROM DOCTOR WHERE DOCTOR_NAME = ? AND DEPT_NAME = ?)
		  , SYSDATE
		  , ?
		  ,	'N'
		  )
	</entry>
	
	
	<!-- (상우) 일반 건강검진 예약 조회 -->
	<entry key="selectCheckupAppN">
	
		SELECT				  
						APPOINTMENT_NO
					, CHECKUP_DATE
					, APPOINTMENT_TIME
					, TOTAL_PRICE
					, USER_NAME	
		      , USER_ID
		      , MEDI_LIST
		      , SURGERY_YN
		      , SURGERY_NAME
		      , FLY_YN
		  FROM 
		  			CHECKUP_APP
		  JOIN  MEMBER USING (USER_NO)
		  JOIN  CHECK_LIST CL ON APPOINTMENT_NO = CHECKUP_NO

			WHERE APPOINTMENT_TYPE = 'A'
			  AND TRUNC(CHECKUP_DATE) BETWEEN ? AND ?
			  
	</entry>
	

	<!-- (상우) 기업 건강검진 예약 조회 -->
	<entry key="selectCheckupAppC">
	
	SELECT	
					APPOINTMENT_NO
				, CHECKUP_DATE
				, APPOINTMENT_TIME
				, TOTAL_PRICE	
        , EMP_NO
        , EMP_NAME
        , MEDI_LIST
        , SURGERY_YN
        , SURGERY_NAME
        , FLY_YN
	  FROM  
	  			CHECKUP_APP
    JOIN  COMPANY ON COMPANY_NO = COMP_NO
    JOIN  MEMBER USING (USER_NO)
    JOIN  EMPLOYEE ON USER_SSN = SSN
    JOIN  CHECK_LIST CL ON APPOINTMENT_NO = CHECKUP_NO

	 WHERE  APPOINTMENT_TYPE = 'B'
     AND  TRUNC(CHECKUP_DATE) BETWEEN ? AND ?	  
		 AND  COMP_NAME = ?
	</entry>



	<!-- (상우) 기업 건강검진 예약 삭제 -->
	<entry key="deleteCheckupApp">
		DELETE
		  FROM  
		  			CHECKUP_APP
		 WHERE  
		 				APPOINTMENT_NO = ?
	</entry>


	<!-- (준수) 일반검진 예약 추가-->
	<entry key ="insertNormalCheckUp">
	INSERT
		INTO CHECKUP_APP
		(
		  APPOINTMENT_NO
		, USER_NO
		, COMPANY_NO
		, APPOINTMENT_DATE
		, APPOINTMENT_TYPE
    , APPOINTMENT_TIME
    , CHECKUP_DATE
    , TOTAL_PRICE
		)

		VALUES
		(
		  'ch' || SEQ_CHN.NEXTVAL
		, ?
		, NULL
		, SYSDATE
		, 'A'
		, ?
    , ?
    , '50000'
		)
	</entry>
	
	
	<!-- (상우) 일반건강검진 예약 추가(2/3) -->
	<entry key="insertCheckupAppN">
	
		INSERT 
		  INTO
		  			CHECKUP_APP
		  (
		  	APPOINTMENT_NO
		  , USER_NO
		  , COMPANY_NO
		  , APPOINTMENT_DATE
		  , APPOINTMENT_TYPE
		  , APPOINTMENT_TIME
		  , CHECKUP_DATE
		  , TOTAL_PRICE
		  )		
		  VALUES
		  (
		  	'ch' || SEQ_CHN.NEXTVAL
		  , ?
		  , NULL
		  , SYSDATE
		  , 'A'
		  , ?
		  ,	?
		  , ?
		  )
	</entry>
	
	<!-- (상우) 일반건강검진 예약 추가(3/3), 기업건강검진 예약 추가(4/4) -->
	<entry key="insertChecklist">
	
		INSERT 
		  INTO
		  			CHECK_LIST
		  (
		  	USER_NO
		  , MEDI_LIST
		  , SURGERY_NAME
		  , SURGERY_YN
		  , FLY_YN
		  , CHECKUP_NO
		  )		
		  VALUES
		  (
		  	?
		  , ?
		  , ?
		  , ?
		  , ?
		  , (SELECT APPOINTMENT_NO FROM CHECKUP_APP WHERE USER_NO = ? AND CHECKUP_DATE = ? AND APPOINTMENT_TIME = ? AND TOTAL_PRICE = ?)
		  )
	</entry>
	
	
	<!-- (상우) 기업건강검진 예약 추가(3/4) -->
	<entry key="insertCheckupAppC">
	
		INSERT 
		  INTO
		  			CHECKUP_APP
		  (
		  	APPOINTMENT_NO
		  , USER_NO
		  , COMPANY_NO
		  , APPOINTMENT_DATE
		  , APPOINTMENT_TYPE
		  , APPOINTMENT_TIME
		  , CHECKUP_DATE
		  , TOTAL_PRICE
		  )		
		  VALUES
		  (
		  	'ch' || SEQ_CHN.NEXTVAL
		  , ?
		  , (SELECT COMP_NO FROM COMPANY WHERE COMP_NAME = ?)
		  , SYSDATE
		  , 'B'
		  , ?
		  ,	?
		  , ?
		  )
	</entry>
	
	<entry key ="insertCheckList1">
	
	INSERT
		INTO CHECK_LIST
		(
		  USER_NO
		, MEDI_LIST
		, SURGERY_NAME
		, SURGERY_YN
		, FLY_YN
    , CHECKUP_NO


		)

		VALUES
		(
		  ?
		, ?
		, ?
		, ?
		, ?
		, (SELECT APPOINTMENT_NO 
							FROM CHECKUP_APP 
							WHERE USER_NO = ?
							AND TRUNC(APPOINTMENT_DATE) = TRUNC(SYSDATE))
		)
	
	</entry>	
	
	<entry key = "selectNormalSuccess">
	
		SELECT
		APPOINTMENT_NO,
    USER_NO,
		APPOINTMENT_DATE,
		APPOINTMENT_TYPE,
		CHECKUP_DATE,
    TOTAL_PRICE
        
		FROM CHECKUP_APP
        
		WHERE USER_NO = ?
		AND APPOINTMENT_NO = ?
		AND TRUNC(CHECKUP_DATE) = ?
		AND TRUNC(APPOINTMENT_DATE) = TRUNC(SYSDATE))
	</entry>
	
	<entry key="selectCompany11">
	
	SELECT
			COMP_NAME
	  ,  EMP_NAME
	  , EMP_NO
	FROM
	    EMPLOYEE
	JOIN COMPANY USING (COMP_NO)
	WHERE
	       COMP_NAME = ?
	  AND  EMP_NAME = ?
	  AND  EMP_NO = ?
    
	
	
	</entry>

</properties>